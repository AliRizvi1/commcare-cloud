---
# hook all webworkers into the db machine pg access config
- name: PostgreSQL
  hosts: postgresql
  sudo: yes
  vars_files:
    - "vars/{{ deploy_env }}.yml"
  roles:
    - postgresql
  vars:
    pg_install: False

# deploy_staging_webworker.yml
- name: Webworkers
  hosts: webworkers
  serial: 1
  sudo: yes

  pre_tasks:

    - name: remove worker from load balancer
      delegate_to: "{{ item }}"
      with_items: groups.proxy
      lineinfile:
        dest: /etc/apache2/sites-enabled/cchq
        regexp: ^[\s]*BalancerMember http://{{ inventory_hostname }}:9010 loadfactor=2
        state: absent
    - name: restart apache
      delegate_to: "{{ item }}"
      with_items: groups.proxy
      service: name=apache2 state=reloaded

  post_tasks:

    - name: add worker back to load balancer
      delegate_to: "{{ item }}"
      with_items: groups.proxy
      lineinfile:
        dest: /etc/apache2/sites-enabled/cchq
        line: "        BalancerMember http://{{ inventory_hostname }}:9010 loadfactor=2"
        insertbefore: "ProxySet lbmethod=byrequests"
        state: present
    - name: restart apache
      delegate_to: "{{ item }}"
      with_items: groups.proxy
      service: name=apache2 state=reloaded
  vars_files:
    - "vars/{{ deploy_env }}.yml"
  roles:
    - common
    - webworker

# after everything else is done, run the steps in pg and apache config that
# are specific to hooking in any new web-workers.

- name: Proxy
  hosts: proxy
  sudo: yes
  vars_files:
    - "vars/{{ deploy_env }}.yml"
  roles:
    - apache2
  vars:
    apache2_install: False
