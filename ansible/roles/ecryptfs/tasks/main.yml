---
- name: Install ecryptfs-utils
  sudo: yes
  apt: name=ecryptfs-utils state=present

- name: Check for already mounted drive
  shell: cat /etc/mtab
  register: mtab_contents

- name: Create encrypted drive root directory
  sudo: yes
  file: path="{{ ecrypted_root }}" owner=root group=root mode=0755 state=directory

- name: Add encryption password to keyring
  sudo: yes
  shell: 'printf "%s" "{{ ECRYPTFS_PASSWORD }}" | ecryptfs-add-passphrase | grep -o "\[.*\]" | sed "s/\[//g;s/\]//g"'
  register: password_hash
  when: "'{{ ecrypted_root }}' not in mtab_contents.stdout"

- name: Mount data drive
  sudo: yes
  shell: "mount -t ecryptfs -o key=passphrase:passphrase_passwd={{ ECRYPTFS_PASSWORD }},user,noauto,ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_unlink_sigs,ecryptfs_enable_filename_crypto=y,ecryptfs_fnek_sig={{ password_hash.stdout }},verbosity=0 {{ ecrypted_root }}/ {{ ecrypted_root }}/"
  when: "'{{ ecrypted_root }}' not in mtab_contents.stdout"

- name: Drop unencrypted readme in directory
  sudo: yes
  lineinfile:
    dest: '{{ ecrypted_root }}/README'
    line: 'If you can read this file the directory is unencrypted'
    create: yes
    owner: root
    group: root
    mode: 0770

- name: Register mount configuration
  sudo: yes
  shell: "cat /etc/mtab | grep '{{ ecrypted_root }}'"
  register: mount_conf

- name: add user, noauto to mount conf
  shell: "echo {{ mount_conf.stdout }} | sed -e 's/rw/user,noauto,rw/'"
  when: "'noauto' not in mount_conf.stdout"
  register: updated_mount_conf

- name: Create entry in fstab
  sudo: yes
  lineinfile:
    dest: "/etc/fstab"
    regexp: "^{{ ecrypted_root }}"
    backup: yes
    line: "{{ updated_mount_conf.stdout if not 'skipped' in updated_mount_conf else mount_conf.stdout }}"
  when: "'{{ ecrypted_root }}' not in mtab_contents.stdout"
