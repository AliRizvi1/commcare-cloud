#jinja2:trim_blocks: False
#
# {{ ansible_managed }}
#

%YAML 1.2
---
Application:
  license_key: {{ NEW_RELIC_KEY }}
  wake_interval: 60

  {% if newrelic_agents_pgbouncer %}
  pgbouncer:
    host: localhost
    port: 6432
    user: '{{ localsettings.PG_DATABASE_USER }}'
    password: '{{ localsettings.PG_DATABASE_PASSWORD }}'
    database: pgbouncer
  {% endif %}

  {% if newrelic_agents_postgresql %}
  postgresql:
    host: localhost
    port: 5432
    user: '{{ localsettings.PG_DATABASE_USER }}'
    password: '{{ localsettings.PG_DATABASE_PASSWORD }}'
    dbname: '{{ localsettings.PG_DATABASE_NAME }}'
    superuser: False
  {% endif %}

  {% if newrelic_agents_rabbitmq %}
  rabbitmq:
    name: {{ ansible_hostname }}
    host: localhost
    port: 15672
    username: '{{ AMQP_USER }}'
    password: '{{ AMQP_PASSWORD }}'
  {% endif %}

  {% if newrelic_agents_redis %}
  redis:
    - name: {{ ansible_hostname }}
      host: localhost
      port: 6379
      db_count: 0
  {% endif %}

  {% if newrelic_agents_nginx %}
  nginx:
    name: {{ ansible_hostname }}
    scheme: http
    host: localhost
    port: 80
    path: /nginx_stub_status
  {% endif %}

  {% if newrelic_agents_elastic %}
  elasticsearch:
    name: es_{{ deploy_env }}
    host: {{ elasticsearch_endpoint }}
    port: 9200
    scheme: http
  {% endif %}

  {% if newrelic_agents_apache %}
  apache_httpd:
    name: {{ ansible_hostname }}
    scheme: http
    host: localhost
    port: 80
    path: /server-status
  {% endif %}

Daemon:
  user: newrelic
  pidfile: /var/run/newrelic/newrelic-plugin-agent.pid

Logging:
  formatters:
    verbose:
      format: '%(levelname) -10s %(asctime)s %(process)-6d %(processName) -15s %(threadName)-10s %(name) -45s %(funcName) -25s L%(lineno)-6d: %(message)s'
  handlers:
    file:
      class : logging.handlers.RotatingFileHandler
      formatter: verbose
      filename: /var/log/newrelic/newrelic-plugin-agent.log
      maxBytes: 10485760
      backupCount: 3
  loggers:
    newrelic_plugin_agent:
      level: WARNING
      propagate: True
      handlers: [console, file]
    requests:
      level: ERROR
      propagate: True
      handlers: [console, file]
