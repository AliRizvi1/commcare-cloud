{{ ansible_managed|comment }}

# Database administrative login by Unix domain socket
local   all             postgres                                peer

# TYPE  DATABASE        USER            ADDRESS                 METHOD

{% if postgres_users.get('netvault') %}
# Netvault required configuration
host    all             netvault        127.0.0.1/32            md5
local   all             netvault                                md5
{% endif %}

# "local" is for Unix domain socket connections only
local   all             all                                     peer

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5

# IPv6 local connections:
host    all             all             ::1/128                 md5

# Allow replication connections from localhost, by a user with the replication privilege.
local   replication     postgres                                peer

{% if postgres_users.get('replication') %}
host    replication     {{ postgres_users.replication.username }}   {{ cluster_ip_range|default('0.0.0.0/0') }}    md5
{% endif %}

host{% if postgresql_ssl_enabled %}ssl{% endif %}    all      devreadonly    {{ cluster_ip_range|default('0.0.0.0/0') }}    md5

# For icds-tableau, applicable only for NIC cluster
host{% if postgresql_ssl_enabled %}ssl{% endif %}    all      testdata_writer    {{ cluster_ip_range|default('0.0.0.0/0') }}   md5
host{% if postgresql_ssl_enabled %}ssl{% endif %}    all      tableau_readonly    {{ cluster_ip_range|default('0.0.0.0/0') }}   md5

# host all all 192.168.33.0/24 md5

{% if cluster_ip_range is defined %}
{% for user in postgresql_dbs | json_query('[*].user') + [localsettings.PG_DATABASE_USER] | unique %}
host all {{ user }} {{ cluster_ip_range }} md5
{% endfor %}
{%  else %}
{% for host in (groups['formplayer'] + groups['touchforms'] + groups['webworkers'] + groups['celery'] + groups['pillowtop'] + groups['postgresql'] + groups['pg_standby']) | unique %}
# {{ host }}
{% for db_name, db_list in postgresql_dbs|groupby('name') %}
{% set db = db_list[0] %}
{% if db.get('host', localsettings.PG_DATABASE_HOST) == inventory_hostname or db.get('host', localsettings.PG_DATABASE_HOST) == hot_standby_master|default(None) or is_monolith|bool %}
{% if host | ipaddr %}
host   {{ db.name }}	{{ db.get('user', localsettings.PG_DATABASE_USER) }}	{{ host }}/32   md5
{% else %}
host   {{ db.name }}	{{ db.get('user', localsettings.PG_DATABASE_USER) }}	{{ lookup('dig', host, wantlist=True)[0] }}/32	md5
{% endif %}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}
